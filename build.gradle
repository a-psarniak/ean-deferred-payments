/*
 * Copyright (c) 2013-2014, Expedia Affiliate Network
 * All rights reserved.
 */

buildscript {
    repositories {
        maven { url 'http://maven.ean/content/groups/local-repos/' }
        mavenCentral()
        dependencies {
            classpath 'com.ean.gradle:ean-gradle-plugins:0.6.1'
            classpath 'org.gradle.api.plugins:gradle-clover-plugin:0.6.1'
        }

    }
}

apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'ean-project'

apply plugin: 'clover'

// Java compatibility versions
sourceCompatibility = 1.7
targetCompatibility = 1.7

archivesBaseName = 'ean-site-widget-service'
def branchName


repositories {
    mavenLocal()
    maven { url 'http://maven.ean/content/repositories/libs-snapshots-local/' }
    maven { url 'http://maven.ean/content/repositories/local-repos/' }
    maven { url 'http://maven.ean/content/repositories/libs-releases-local/' }
    mavenCentral()
}



sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }

    unitTest {
        java {
            srcDir 'src/test/unit/java'
        }
        resources {
            srcDir 'src/test/unit/resources'
            srcDir 'var/tomcat/main/resources/conf'
        }
    }

    functionalTest {
        java {
            srcDir 'src/test/functional/java'
        }
        resources {
            srcDir 'src/main/resources'
            srcDir 'var/tomcat/main/resources/conf'
        }
    }
}


def configDir = new File(rootDir, 'config')

apply plugin: 'war'

war {
    from('src/main/templates') {
        into('templates')
        archiveName = 'ROOT.war'
        manifest {
            from project.jar.manifest
        }
    }

}

ext {
    testngVersion = '6.4'
    springVersion = '3.2.3.RELEASE'
    restassuredVersion = '2.3.0'
}


dependencies {
    clover 'com.cenqua.clover:clover:3.1.10'
    clover 'commons-cli:commons-cli:1.2'

    compile 'commons-validator:commons-validator:1.4.0'
    compile 'org.apache.commons:commons-io:1.3.2'

    compile 'com.nds:nudetect:2.1.24164'

    //spring related dependencies start
    compile "org.springframework:spring-core:${springVersion}"
    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-web:${springVersion}"
    //spring related dependencies end

    //Logger dependencies start
    compile 'commons-logging:commons-logging:1.1.2'
    runtime 'org.slf4j:slf4j-log4j12:1.7.5'
    compile 'log4j:log4j:1.2.17'
    //Logger dependencies end

    compile 'com.ean.partner.error:ean-partner-error:0.0.6'

    compile('com.ean.logging:ean-logging:0.1.0') {
        exclude group: 'com.sun.jersey', module: 'jersey-client'
        exclude group: 'javax.ws.rs', module: 'jsr311-api'
    }

    //Jackson start
    compile 'com.fasterxml.jackson.core:jackson-core:2.3.3'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.3.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.3.3'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.3.3'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.3.3'
    //Jackson end

    compile('org.apache.cxf:cxf-bundle-minimal:2.7.7') {
        exclude group: 'org.springframework', module: 'spring-asm'
        exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
        exclude group: 'commons-codec', module: 'commons-codec'
        exclude group: 'commons-httpclient', module: 'commons-httpclient'
    }

    //test dependencies start
    testCompile(group: 'com.jayway.restassured', name: 'rest-assured', version: "${restassuredVersion}") {
        exclude(module: 'groovy')
    }

    testCompile(group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.2.1')
    testCompile "org.testng:testng:${testngVersion}"
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile "org.springframework:spring-test:${springVersion}"

    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'org.powermock:powermock-api-mockito:1.5'
    testCompile 'org.powermock:powermock-module-junit4:1.5'
    testCompile 'org.powermock:powermock-module-testng:1.4.11'

    tasks.withType(Test) {
//    classpath += sourceSets.testProperties.runtimeClasspath
        useTestNG() {
            parallel = 'tests'
            threadCount = 10
        }

        testLogging.events 'passed', 'failed', 'skipped'
        jvmArgs '-XX:MaxPermSize=1024m'

        if (project.hasProperty('test.ignoreFailures')) {
            ignoreFailures = project.property('test.ignoreFailures')
        }
    }
    //test dependencies end


}


